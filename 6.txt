

1.) WAP in Java to implement Binary search in a 1D array.

class Main
{  
 public static void main(int arr[], int first, int last, int key)
 {  
   int mid = (first + last)/2;
   
   while( first <= last )
   {  
      if ( arr[mid] < key )
      {  
        first = mid + 1;     
      }
      else if ( arr[mid] == key )
      {  
        System.out.println("Element is found at index: " + mid);  
        break;  
      }
      else
      {  
         last = mid - 1;  
      }  
      mid = (first + last)/2;  
   }  
   if ( first > last )
   {  
      System.out.println("Element is not found!");  
   }  
 }  
 public static void main(String args[])
 {  
        int arr[] = {10,20,30,40,50};  
        int key = 40;  
        int last=arr.length-1;  
        main(arr,0,last,key);     
 }  
}  

2.) Illustrate the execution of constructors in multi-level inheritance with three Java classes â€“ plate(length, width), box(length, width, height), wood
    box(length, width, height, thickness).

class plate{
    int l=12, w=18;
    
}

class box extends plate{
    int l=4;
    int w=9;
    int h=8;
    
}

class wood extends box{
    int l=35;
    int w=56;
    int h=67;
    int thickness=5;
    
}

public class Main extends wood{
    public static void main(String[] args){
        plate obj1=new box();
        System.out.println(obj1.l);
        System.out.println(obj1.w);
        
        box obj2=new wood();
        System.out.println(obj2.h);
    }
    
}

3.) Java Program to display the lower triangular matrix.

class Main   
{    
    public static void main(String[] args) {    
    int rows, cols;    

        int a[][] = {       
                        {1, 2, 3},    
                        {8, 6, 4},    
                        {4, 5, 6}    
                    };    
              
             
          rows = a.length;    
          cols = a[0].length;    
            
          if(rows != cols){    
              System.out.println("Matrix should be a square matrix");    
          }    
          else {    
                
              System.out.println("Lower triangular matrix: ");    
              for(int i = 0; i < rows; i++){    
                  for(int j = 0; j < cols; j++){    
                    if(j > i)    
                      System.out.print("0 ");    
                    else    
                      System.out.print(a[i][j] + " ");    
                }    
                System.out.println();    
            }    
        }    
    }    
}  


4.) Java Program to find the transpose of a given matrix.

class Main
{  
    public static void main(String args[])
    {  
         
        int given[][]={{9,9,7},{6,0,5},{4,2,6}};    
            
         
        int transpose[][]=new int[3][3];  
            
        
        for(int i=0;i<3;i++)
        {    
            for(int j=0;j<3;j++)
            {    
                transpose[i][j]=given[j][i];  
            }    
        }    
  
        System.out.println("Matrix without transpose:");  
        for(int i=0;i<3;i++)
        {    
            for(int j=0;j<3;j++)
            {    
                System.out.print(given[i][j]+" ");    
            }    
            System.out.println();  
        } 
        
        System.out.println("Matrix After Transpose:");  
        for(int i=0;i<3;i++)
        {    
            for(int j=0;j<3;j++)
            {    
                System.out.print(transpose[i][j]+" ");    
            }    
            System.out.println();//new line    
        }    
    } 
}
